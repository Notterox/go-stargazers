package main

import (
	"encoding/json"
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
)

func boolToInt(v bool) int {
	if v {
		return 1
	}
	return 0
}

func humanize(number int) string {
	switch {
	case number >= 1e9:
		return fmt.Sprintf("%.[2]*[1]fgb", float64(number)/1e9, boolToInt(number%1e9 != 0))
	case number >= 1e6:
		return fmt.Sprintf("%.[2]*[1]fgm", float64(number)/1e6, boolToInt(number%1e6 != 0))
	case number >= 1e3:
		return fmt.Sprintf("%.[2]*[1]fk", float64(number)/1e3, boolToInt(number%1e3 != 0))
	default:
		return fmt.Sprint(number)
	}
}

type StargazersPart struct {
	Stargazers_count float64
}

func queryStargazers(repo string) int {
	req, err := http.NewRequest(
		http.MethodGet,
		"https://api.github.com/repos/"+repo,
		nil)
	if err != nil {
		fmt.Println(err)
		return 0
	}
	req.Header = map[string][]string{
		"Accept": {"application/vnd.github.v3+json"},
	}
	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		fmt.Println(err)
	}

	buf := make([]byte, 4048)
	body := resp.Body
	builder := make([]byte, 0, 256)
	for {
		read, err := body.Read(buf)

		builder = append(builder, buf[:read]...)

		if err == io.EOF || read == 0 {
			break
		}
	}

	var stargazer StargazersPart
	err = json.Unmarshal(builder, &stargazer)
	if err != nil {
		fmt.Println(err)
	}
	return int(stargazer.Stargazers_count)
}

func handle(w http.ResponseWriter, r *http.Request) {
	const prefix = "/github.com/"
	u := r.URL.Path
	repo := strings.TrimPrefix(u, prefix)
	stargazers := queryStargazers(repo)
	w.Header().Set("Content-Type", "image/svg+xml")
	w.Write([]byte(fmt.Sprintf(template, humanize(stargazers))))
}

func main() {
	http.HandleFunc("/github.com/", handle)

	log.Println("Serving on port 8080")

	err := http.ListenAndServe(":8080", nil)
	if err != nil {
		log.Fatal("ListenAndServe:", err)
	}
}

const template = `
<svg width="122" height="28" viewBox="0 0 122 28" fill="none" xmlns="http://www.w3.org/2000/svg">
<text x="96" y="14" font-family="sans-serif" text-anchor="middle" alignment-baseline="middle">10.7k</text>
<rect x="0.5" y="0.5" width="121" height="27" rx="3.5" fill="white"/>
<rect x="0.5" y="0.5" width="63" height="27" fill="#FAFBFC"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M18 6.25C18.14 6.24991 18.2773 6.28901 18.3962 6.36289C18.5151 6.43676 18.611 6.54245 18.673 6.668L20.555 10.483L24.765 11.095C24.9035 11.1151 25.0335 11.1736 25.1405 11.2637C25.2475 11.3539 25.3271 11.4722 25.3704 11.6052C25.4137 11.7383 25.4189 11.8808 25.3854 12.0167C25.3519 12.1525 25.2811 12.2763 25.181 12.374L22.135 15.344L22.854 19.536C22.8777 19.6739 22.8624 19.8157 22.8097 19.9454C22.757 20.0751 22.6691 20.1874 22.5559 20.2697C22.4427 20.352 22.3087 20.401 22.1691 20.4111C22.0295 20.4212 21.8899 20.3921 21.766 20.327L18 18.347L14.234 20.327C14.1102 20.392 13.9707 20.4211 13.8312 20.411C13.6917 20.4009 13.5578 20.352 13.4447 20.2699C13.3315 20.1877 13.2436 20.0755 13.1908 19.946C13.138 19.8165 13.1225 19.6749 13.146 19.537L13.866 15.343L10.818 12.374C10.7176 12.2763 10.6465 12.1525 10.6128 12.0165C10.5792 11.8805 10.5843 11.7378 10.6276 11.6045C10.6709 11.4713 10.7507 11.3528 10.8579 11.2626C10.965 11.1724 11.0953 11.114 11.234 11.094L15.444 10.483L17.327 6.668C17.389 6.54245 17.4849 6.43676 17.6038 6.36289C17.7227 6.28901 17.86 6.24991 18 6.25V6.25ZM18 8.695L16.615 11.5C16.5612 11.6089 16.4818 11.7031 16.3835 11.7745C16.2853 11.8459 16.1712 11.8924 16.051 11.91L12.954 12.36L15.194 14.544C15.2811 14.6289 15.3464 14.7337 15.384 14.8493C15.4216 14.965 15.4305 15.0881 15.41 15.208L14.882 18.292L17.651 16.836C17.7586 16.7794 17.8784 16.7499 18 16.7499C18.1216 16.7499 18.2414 16.7794 18.349 16.836L21.119 18.292L20.589 15.208C20.5685 15.0881 20.5774 14.965 20.615 14.8493C20.6526 14.7337 20.7178 14.6289 20.805 14.544L23.045 12.361L19.949 11.911C19.8288 11.8934 19.7147 11.8469 19.6165 11.7755C19.5182 11.7041 19.4388 11.6099 19.385 11.501L18 8.694V8.695Z" fill="#575D64"/>
<path d="M32.6816 14.1973C31.7168 13.9199 31.0137 13.5801 30.5723 13.1777C30.1348 12.7715 29.916 12.2715 29.916 11.6777C29.916 11.0059 30.1836 10.4512 30.7188 10.0137C31.2578 9.57227 31.957 9.35156 32.8164 9.35156C33.4023 9.35156 33.9238 9.46484 34.3809 9.69141C34.8418 9.91797 35.1973 10.2305 35.4473 10.6289C35.7012 11.0273 35.8281 11.4629 35.8281 11.9355H34.6973C34.6973 11.4199 34.5332 11.0156 34.2051 10.7227C33.877 10.4258 33.4141 10.2773 32.8164 10.2773C32.2617 10.2773 31.8281 10.4004 31.5156 10.6465C31.207 10.8887 31.0527 11.2266 31.0527 11.6602C31.0527 12.0078 31.1992 12.3027 31.4922 12.5449C31.7891 12.7832 32.291 13.002 32.998 13.2012C33.709 13.4004 34.2637 13.6211 34.6621 13.8633C35.0645 14.1016 35.3613 14.3809 35.5527 14.7012C35.748 15.0215 35.8457 15.3984 35.8457 15.832C35.8457 16.5234 35.5762 17.0781 35.0371 17.4961C34.498 17.9102 33.7773 18.1172 32.875 18.1172C32.2891 18.1172 31.7422 18.0059 31.2344 17.7832C30.7266 17.5566 30.334 17.248 30.0566 16.8574C29.7832 16.4668 29.6465 16.0234 29.6465 15.5273H30.7773C30.7773 16.043 30.9668 16.4512 31.3457 16.752C31.7285 17.0488 32.2383 17.1973 32.875 17.1973C33.4688 17.1973 33.9238 17.0762 34.2402 16.834C34.5566 16.5918 34.7148 16.2617 34.7148 15.8438C34.7148 15.4258 34.5684 15.1035 34.2754 14.877C33.9824 14.6465 33.4512 14.4199 32.6816 14.1973ZM38.5938 10.125V11.6602H39.7773V12.498H38.5938V16.4297C38.5938 16.6836 38.6465 16.875 38.752 17.0039C38.8574 17.1289 39.0371 17.1914 39.291 17.1914C39.416 17.1914 39.5879 17.168 39.8066 17.1211V18C39.5215 18.0781 39.2441 18.1172 38.9746 18.1172C38.4902 18.1172 38.125 17.9707 37.8789 17.6777C37.6328 17.3848 37.5098 16.9688 37.5098 16.4297V12.498H36.3555V11.6602H37.5098V10.125H38.5938ZM44.9629 18C44.9004 17.875 44.8496 17.6523 44.8105 17.332C44.3066 17.8555 43.7051 18.1172 43.0059 18.1172C42.3809 18.1172 41.8672 17.9414 41.4648 17.5898C41.0664 17.2344 40.8672 16.7852 40.8672 16.2422C40.8672 15.582 41.1172 15.0703 41.6172 14.707C42.1211 14.3398 42.8281 14.1562 43.7383 14.1562H44.793V13.6582C44.793 13.2793 44.6797 12.9785 44.4531 12.7559C44.2266 12.5293 43.8926 12.416 43.4512 12.416C43.0645 12.416 42.7402 12.5137 42.4785 12.709C42.2168 12.9043 42.0859 13.1406 42.0859 13.418H40.9961C40.9961 13.1016 41.1074 12.7969 41.3301 12.5039C41.5566 12.207 41.8613 11.9727 42.2441 11.8008C42.6309 11.6289 43.0547 11.543 43.5156 11.543C44.2461 11.543 44.8184 11.7266 45.2324 12.0938C45.6465 12.457 45.8613 12.959 45.877 13.5996V16.5176C45.877 17.0996 45.9512 17.5625 46.0996 17.9062V18H44.9629ZM43.1641 17.1738C43.5039 17.1738 43.8262 17.0859 44.1309 16.9102C44.4355 16.7344 44.6562 16.5059 44.793 16.2246V14.9238H43.9434C42.6152 14.9238 41.9512 15.3125 41.9512 16.0898C41.9512 16.4297 42.0645 16.6953 42.291 16.8867C42.5176 17.0781 42.8086 17.1738 43.1641 17.1738ZM50.6406 12.6328C50.4766 12.6055 50.2988 12.5918 50.1074 12.5918C49.3965 12.5918 48.9141 12.8945 48.6602 13.5V18H47.5762V11.6602H48.6309L48.6484 12.3926C49.0039 11.8262 49.5078 11.543 50.1602 11.543C50.3711 11.543 50.5312 11.5703 50.6406 11.625V12.6328Z" fill="#575D64"/>
<rect x="0.5" y="0.5" width="63" height="27" stroke="#D9DADC"/>
<rect x="0.5" y="0.5" width="121" height="27" rx="3.5" stroke="#DDDFE1"/>
<text x="96" y="14" font-size="0.8em" font-family="sans-serif" text-anchor="middle" dy=".3em" font-weight="600" fill="black">%s</text>
</svg>`
